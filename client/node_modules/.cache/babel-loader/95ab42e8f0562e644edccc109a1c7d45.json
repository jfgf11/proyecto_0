{"ast":null,"code":"var _jsxFileName = \"/home/jfgf11/Documents/Cloud_Computing/Proyecto_0/client/src/components/EventsList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState } from \"react\";\nimport httpClients from '../httpClients';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EventsList(props) {\n  _s();\n\n  const [listEvents, setListEvents] = useState([]);\n  const [currentPage, setCurrentPage] = useState(0);\n  useEffect(() => {\n    httpClients.get('//localhost:5000/event', {\n      offset: currentPage\n    }).then(events => {\n      setListEvents(events.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: listEvents.length\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EventsList, \"xi1nSwKQF6jF3vI9t9NTFej/C/o=\");\n\n_c = EventsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventsList\");","map":{"version":3,"sources":["/home/jfgf11/Documents/Cloud_Computing/Proyecto_0/client/src/components/EventsList.js"],"names":["React","useEffect","useState","httpClients","EventsList","props","listEvents","setListEvents","currentPage","setCurrentPage","get","offset","then","events","data","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAIA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACtC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,CAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,WAAW,CAACO,GAAZ,CAAgB,wBAAhB,EACA;AACIC,MAAAA,MAAM,EAAEH;AADZ,KADA,EAGGI,IAHH,CAGSC,MAAD,IAAY;AAChBN,MAAAA,aAAa,CAACM,MAAM,CAACC,IAAR,CAAb;AACH,KALD;AAMH,GAPQ,EAON,EAPM,CAAT;AAUA,sBACI;AAAA,cACKR,UAAU,CAACS;AADhB;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAnBuBX,U;;KAAAA,U","sourcesContent":["import React from 'react'\nimport { useEffect, useState } from \"react\";\nimport httpClients from '../httpClients';\n\n\n\nexport default function EventsList(props) {\n    const [listEvents, setListEvents] = useState([])\n    const [currentPage, setCurrentPage] = useState(0)\n\n    useEffect(() => {\n        httpClients.get('//localhost:5000/event',\n        {\n            offset: currentPage\n        }).then((events) => {\n            setListEvents(events.data)\n        })\n    }, [])\n\n\n    return (\n        <div>\n            {listEvents.length}\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}